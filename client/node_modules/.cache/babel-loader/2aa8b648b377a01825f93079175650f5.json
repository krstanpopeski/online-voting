{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport ControlledCarousel from './ControlledCarousel';\nimport ReactNotification from \"react-notifications-component\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"react-notifications-component/dist/theme.css\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport FlipMove from \"react-flip-move\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport { Spin } from 'antd';\nimport ListPolls from './ListPolls';\nexport default class App extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.showNotification = (ref, message, title, type, duration) => {\n      ref.current.addNotification({\n        title: title,\n        message: message,\n        type: type,\n        insert: \"top\",\n        container: \"top-center\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: duration\n        },\n        dismissable: {\n          click: true\n        }\n      });\n    };\n\n    this.openModal = () => {\n      const token = sessionStorage.getItem('jwtToken');\n\n      if (token) {\n        fetch(\"http://localhost:3001/api/verify\", {\n          method: 'GET',\n          headers: new Headers({\n            'Authorization': token,\n            'Content-Type': 'application/x-www-form-urlencoded'\n          })\n        }).then(res => {\n          if (res.status === 200) {\n            res.json().then(data => {\n              this.setState({\n                lgShow: true,\n                name: data.name\n              });\n            });\n          }\n        });\n      } else {\n        this.showNotification(this.notificationDOMRef, \"You have to be logged in to create a poll! Redirecting to Login page shortly! \", \"Info\", \"warning\", 2000);\n        setTimeout(() => this.props.history.push('/login'), 1500);\n      }\n    };\n\n    this.addOptions = () => {\n      let hasSame = false;\n\n      for (let i = 0; i < this.state.options.length; i++) {\n        if (this.state.options[i].key === this.textInput.value) {\n          hasSame = true;\n          break;\n        }\n      }\n\n      if (this.textInput.value.localeCompare(\"\") !== 0 && !hasSame) {\n        let options = this.state.options;\n        options.push({\n          name: this.textInput.value,\n          key: this.textInput.value,\n          votes: 0\n        });\n        this.setState({\n          options: options\n        }, () => {\n          this.textInput.value = \"\";\n        });\n      }\n    };\n\n    this.deleteItem = key => {\n      let filteredItems = this.state.options.filter(item => {\n        return item.key !== key;\n      });\n      this.setState({\n        options: filteredItems\n      });\n    };\n\n    this.onRegister = () => {\n      if (this.pollDescription.value.length === 0 || this.pollTitle.value.length === 0 || this.state.options.length === 0 || this.state.options.length === 0) {\n        this.showNotification(this.notificationDOM, \"All fields must not be empty!\", \"Error\", \"danger\", 2000);\n      } else {\n        let data = {\n          author: this.state.name,\n          title: this.pollTitle.value,\n          options: this.state.options,\n          expireDate: this.state.endDate,\n          description: this.pollDescription.value\n        };\n        let toUpload = new FormData();\n        toUpload.append('file', this.state.selectedFile);\n        toUpload.append('json', JSON.stringify(data));\n        this.setState({\n          loading: true\n        });\n        axios.post(\"http://localhost:3001/api/upload\", toUpload, {}).then(res => {\n          if (res.status === 200) {\n            this.showNotification(this.notificationDOMRef, \"The poll was successfully created!\", \"Success\", \"success\", 2000);\n            this.setState({\n              lgShow: false,\n              loading: false\n            });\n          }\n        });\n      }\n    };\n\n    this.handleChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.handleFileChange = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.state = {\n      lgShow: false,\n      name: \"\",\n      options: [],\n      endDate: new Date(),\n      selectedFile: null,\n      loading: false\n    };\n    this.notificationDOMRef = React.createRef();\n    this.notificationDOM = React.createRef();\n  }\n\n  render() {\n    let lgClose = () => this.setState({\n      lgShow: false\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOMRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(ControlledCarousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 my-3 d-flex align-items-center flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"To create your own poll, press the following button.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary hvr-bob\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Create Poll\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      size: \"lg\",\n      show: this.state.lgShow,\n      onHide: lgClose,\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Create A Poll\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Poll Title\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter Title For The Poll\",\n      ref: input => this.pollTitle = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Add Voting Options\"), React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Voting Option\",\n      \"aria-label\": \"Voting Option\",\n      \"aria-describedby\": \"basic-addon2\",\n      ref: input => this.textInput = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.addOptions,\n      variant: \"outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"ul\", {\n      className: \"listOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease-out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.state.options.map(t => {\n      return React.createElement(\"li\", {\n        className: \"lis hvr-bounce-out\",\n        onClick: () => this.deleteItem(t.key),\n        key: t.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, t.name);\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"datePicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"How Long Will This Poll Be Active?\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      inline: true,\n      selected: this.state.endDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 15,\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      timeCaption: \"Time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"fileUpload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Upload Your Image\"), React.createElement(\"form\", {\n      method: \"post\",\n      action: \"#\",\n      id: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: \"\",\n      onChange: this.handleFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })))))), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      ref: input => this.pollDescription = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.onRegister,\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"Submit\")))), React.createElement(Spin, {\n      spinning: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\App.js"],"names":["React","ControlledCarousel","ReactNotification","Modal","Form","InputGroup","FormControl","Button","FlipMove","DatePicker","Row","Col","axios","Spin","ListPolls","App","Component","constructor","props","context","showNotification","ref","message","title","type","duration","current","addNotification","insert","container","animationIn","animationOut","dismiss","dismissable","click","openModal","token","sessionStorage","getItem","fetch","method","headers","Headers","then","res","status","json","data","setState","lgShow","name","notificationDOMRef","setTimeout","history","push","addOptions","hasSame","i","state","options","length","key","textInput","value","localeCompare","votes","deleteItem","filteredItems","filter","item","onRegister","pollDescription","pollTitle","notificationDOM","author","expireDate","endDate","description","toUpload","FormData","append","selectedFile","JSON","stringify","loading","post","handleChange","date","handleFileChange","event","target","files","Date","createRef","render","lgClose","input","map","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ControlledCarousel from './ControlledCarousel';\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from 'axios';\r\nimport { Spin } from 'antd';\r\nimport ListPolls from './ListPolls';\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            lgShow: false,\r\n            name: \"\",\r\n            options: [],\r\n            endDate: new Date(),\r\n            selectedFile: null,\r\n            loading: false\r\n        };\r\n        this.notificationDOMRef = React.createRef();\r\n        this.notificationDOM = React.createRef();\r\n    }\r\n\r\n    showNotification = (ref,message, title, type, duration) => {\r\n\r\n        ref.current.addNotification({\r\n            title: title,\r\n            message: message,\r\n            type: type,\r\n            insert: \"top\",\r\n            container: \"top-center\",\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: { duration: duration },\r\n            dismissable: { click: true }\r\n        });\r\n\r\n    };\r\n\r\n\r\n    openModal = () => {\r\n        const token = sessionStorage.getItem('jwtToken');\r\n        if(token){\r\n            fetch(\"http://localhost:3001/api/verify\", {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                })\r\n            })\r\n                .then(res => {\r\n                        if(res.status === 200){\r\n                            res.json().then(data => {\r\n                                this.setState({ lgShow: true, name: data.name});\r\n                            });\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n        }\r\n        else{\r\n\r\n            this.showNotification(this.notificationDOMRef,\"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\"Info\",\"warning\",2000);\r\n            setTimeout(() => this.props.history.push('/login'),1500);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    addOptions= () => {\r\n        let hasSame = false;\r\n         for(let i=0; i<this.state.options.length;i++){\r\n             if(this.state.options[i].key === this.textInput.value){\r\n                 hasSame = true;\r\n                 break;\r\n             }\r\n         }\r\n        if(this.textInput.value.localeCompare(\"\") !== 0 && !hasSame) {\r\n            let options = this.state.options;\r\n            options.push(\r\n                {\r\n                    name: this.textInput.value,\r\n                    key: this.textInput.value,\r\n                    votes: 0\r\n                }\r\n            );\r\n            this.setState({\r\n                options: options\r\n            }, () => {this.textInput.value=\"\";});\r\n        }\r\n    };\r\n\r\n    deleteItem = (key) => {\r\n      let filteredItems =  this.state.options.filter(item => {\r\n          return (item.key !== key);\r\n      });\r\n      this.setState({\r\n          options: filteredItems\r\n      });\r\n    };\r\n\r\n    onRegister = () =>{\r\n      if(this.pollDescription.value.length === 0 || this.pollTitle.value.length === 0 || this.state.options.length ===0 || this.state.options.length === 0){\r\n\r\n          this.showNotification(this.notificationDOM,\"All fields must not be empty!\", \"Error\", \"danger\", 2000);\r\n      }\r\n      else{\r\n\r\n        let data = {\r\n            author: this.state.name,\r\n            title: this.pollTitle.value,\r\n            options: this.state.options,\r\n            expireDate: this.state.endDate,\r\n            description: this.pollDescription.value\r\n        };\r\n\r\n        let toUpload = new FormData();\r\n        toUpload.append('file', this.state.selectedFile);\r\n        toUpload.append('json', JSON.stringify(data));\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        axios.post(\"http://localhost:3001/api/upload\", toUpload, {\r\n\r\n        })\r\n            .then(res=>{\r\n                if(res.status === 200) {\r\n                    this.showNotification(this.notificationDOMRef,\"The poll was successfully created!\", \"Success\", \"success\", 2000);\r\n                    this.setState({\r\n                        lgShow: false,\r\n                        loading: false,\r\n                    })\r\n                }\r\n            })\r\n\r\n      }\r\n\r\n    };\r\n\r\n    handleChange = (date) => {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n\r\n    };\r\n\r\n    handleFileChange = (event) => {\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        let lgClose = () => this.setState({ lgShow: false });\r\n        return (\r\n            <div>\r\n                <ReactNotification ref={this.notificationDOMRef} />\r\n                <div className=\"container-fluid p-0\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <ControlledCarousel/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-md-6 my-3 d-flex align-items-center flex-column\">\r\n                            <h5>To create your own poll, press the following button.</h5>\r\n                            <button type=\"button\" className=\"btn btn-secondary hvr-bob\" onClick={this.openModal}>Create Poll</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.lgShow}\r\n                        onHide={lgClose}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                    >\r\n                        <ReactNotification ref={this.notificationDOM} />\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                Create A Poll\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                    <Form.Label>Poll Title</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter Title For The Poll\" ref={input => this.pollTitle = input}/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Add Voting Options</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <FormControl\r\n                                            placeholder=\"Voting Option\"\r\n                                            aria-label=\"Voting Option\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                            ref={input => this.textInput = input}\r\n                                        />\r\n                                        <InputGroup.Append>\r\n                                            <Button onClick = {this.addOptions} variant=\"outline-secondary\">Add</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n\r\n                                    <ul className=\"listOptions\">\r\n                                        <FlipMove duration={250} easing=\"ease-out\">\r\n                                            {\r\n                                                this.state.options.map(t => {return <li className=\"lis hvr-bounce-out\" onClick={() => this.deleteItem(t.key)} key={t.key}>{t.name}</li>})\r\n                                            }\r\n                                        </FlipMove>\r\n                                    </ul>\r\n\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Col>\r\n                                <Form.Group controlId=\"datePicker\">\r\n                                    <Form.Label>How Long Will This Poll Be Active?</Form.Label>\r\n                                    <InputGroup>\r\n                                    <DatePicker\r\n                                        inline\r\n                                        selected={this.state.endDate}\r\n                                        onChange={this.handleChange}\r\n                                        showTimeSelect\r\n                                        timeFormat=\"HH:mm\"\r\n                                        timeIntervals={15}\r\n                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                        timeCaption=\"Time\"\r\n                                    />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                    <Form.Group controlId=\"fileUpload\">\r\n                                        <Form.Label >Upload Your Image</Form.Label>\r\n                                            <form method=\"post\" action=\"#\" id=\"#\">\r\n                                                <div className=\"form-group files\">\r\n                                                    <input type=\"file\" className=\"form-control\" multiple=\"\" onChange={this.handleFileChange}/>\r\n                                                </div>\r\n\r\n                                            </form>\r\n                                    </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows=\"3\" ref={input => this.pollDescription = input}/>\r\n                                </Form.Group>\r\n                                <Button onClick={this.onRegister} variant=\"primary\" >\r\n                                    Submit\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Spin spinning={this.state.loading}/>\r\n                </div>\r\n            </div>\r\n            \r\n                )\r\n        }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}