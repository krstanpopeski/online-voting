{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\ListPolls.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { List, Avatar, Icon, Skeleton, Divider, Radio, Statistic } from \"antd\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport ApexCharts from 'apexcharts';\nconst Countdown = Statistic.Countdown;\n\nconst IconText = ({\n  type,\n  text\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Icon, {\n  type: type,\n  style: {\n    marginRight: 8\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), text);\n\nconst poll = {\n  \"_id\": \"\",\n  \"author\": \"\",\n  \"authorId\": \"\",\n  \"title\": \"\",\n  \"options\": [{\n    \"_id\": \"\",\n    \"name\": \"\",\n    \"key\": \"\",\n    \"votes\": 0\n  }, {\n    \"_id\": \"\",\n    \"name\": \"\",\n    \"key\": \"\",\n    \"votes\": 0\n  }],\n  \"expireDate\": \"\",\n  \"image\": {\n    \"_id\": \"\",\n    \"url\": \"\",\n    \"type\": \"\"\n  },\n  \"description\": \"\",\n  \"likes\": 0,\n  \"comments\": [],\n  \"createdAt\": \"\",\n  \"updatedAt\": \"\",\n  \"__v\": 0\n};\nexport default class ListPolls extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.populateData = () => {\n      let listData = [];\n      this.state.polls.forEach(item => {\n        listData.push({\n          title: item.title,\n          avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          content: item.description,\n          imageUrl: item.image.url,\n          createdAt: item.createdAt,\n          likes: item.likes,\n          comments: item.comments,\n          id: item._id\n        });\n      });\n      this.setState({\n        listData: listData\n      });\n    };\n\n    this.handlePollClick = id => {\n      this.setState({\n        visible: true,\n        selectedPoll: this.getPollById(id)\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.getPollById = id => {\n      let poll = this.state.polls.filter(poll => {\n        return poll._id === id;\n      });\n      return poll[0];\n    };\n\n    this.onChange = e => {\n      this.setState({\n        radioValue: e.target.value\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.openSecondModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.handleOkVote = () => {};\n\n    this.state = {\n      loading: false,\n      polls: [],\n      listData: [],\n      visible: false,\n      selectedPoll: poll,\n      radioValue: null,\n      show: false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      loading: true\n    }, () => {\n      fetch('http://localhost:3001/api/polls').then(res => {\n        if (res.status === 200) {\n          res.json().then(data => {\n            this.setState({\n              loading: false,\n              polls: data,\n              selectedPoll: data[0]\n            }, () => {\n              this.populateData();\n            });\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Skeleton, {\n      loading: this.state.loading,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"vertical\",\n      size: \"large\",\n      pagination: {\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 3\n      },\n      dataSource: this.state.listData,\n      footer: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"ant design\"), \" footer part\"),\n      renderItem: item => React.createElement(List.Item, {\n        key: item.title,\n        actions: [React.createElement(IconText, {\n          type: \"like-o\",\n          text: item.likes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), React.createElement(IconText, {\n          type: \"message\",\n          text: item.comments.length,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        })],\n        extra: React.createElement(\"button\", {\n          className: \"invisible-button\",\n          onClick: () => this.handlePollClick(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          width: 272,\n          alt: \"logo\",\n          src: 'http://localhost:3001/api/image/' + item.imageUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }),\n        title: React.createElement(\"button\", {\n          className: \"invisible-button\",\n          onClick: () => this.handlePollClick(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, item.title),\n        description: \"Created at: \".concat(new Date(this.state.selectedPoll.createdAt).toLocaleString('mk-MK', {\n          timeZone: 'UTC'\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), item.content),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Are You Sure?\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"By clicking OK you accept to vote for the selected option!\"), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleOkVote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"OK\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      size: \"lg\",\n      show: this.state.visible,\n      onHide: this.handleCancel,\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.state.selectedPoll.title)), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Author: \", this.state.selectedPoll.author))), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Created at: \", new Date(this.state.selectedPoll.createdAt).toLocaleString('mk-MK', {\n      timeZone: 'UTC'\n    })))), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Countdown, {\n      title: \"Time Remaining\",\n      value: this.state.selectedPoll.expireDate,\n      format: \"D - H : m : s \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: 'http://localhost:3001/api/image/' + this.state.selectedPoll.image.url,\n      alt: this.state.selectedPoll._id,\n      height: 300,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, this.state.selectedPoll.description)), React.createElement(Divider, {\n      orientation: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Voting Options\"), React.createElement(\"div\", {\n      className: \"col-md-3 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Radio.Group, {\n      onChange: this.onChange,\n      value: this.state.radioValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, this.state.selectedPoll.options.map(option => {\n      return React.createElement(Radio, {\n        key: option._id,\n        onClick: this.openSecondModal,\n        value: option._id,\n        disabled: !this.props.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, option.name);\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\ListPolls.js"],"names":["React","List","Avatar","Icon","Skeleton","Divider","Radio","Statistic","Modal","Button","Image","ApexCharts","Countdown","IconText","type","text","marginRight","poll","ListPolls","Component","constructor","props","populateData","listData","state","polls","forEach","item","push","title","avatar","content","description","imageUrl","image","url","createdAt","likes","comments","id","_id","setState","handlePollClick","visible","selectedPoll","getPollById","handleOk","handleCancel","filter","onChange","e","radioValue","target","value","handleClose","show","openSecondModal","handleOkVote","loading","componentWillMount","fetch","then","res","status","json","data","render","page","console","log","pageSize","length","Date","toLocaleString","timeZone","author","expireDate","options","map","option","isLoggedIn","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { List, Avatar, Icon, Skeleton, Divider, Radio, Statistic } from \"antd\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport ApexCharts from 'apexcharts';\r\n\r\n\r\nconst { Countdown } = Statistic;\r\n\r\nconst IconText = ({ type, text }) => (\r\n    <span>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n        {text}\r\n  </span>\r\n);\r\n\r\n\r\nconst poll =\r\n    {\r\n        \"_id\": \"\",\r\n        \"author\": \"\",\r\n        \"authorId\": \"\",\r\n        \"title\": \"\",\r\n        \"options\": [\r\n            {\r\n                \"_id\": \"\",\r\n                \"name\": \"\",\r\n                \"key\": \"\",\r\n                \"votes\": 0\r\n            },\r\n            {\r\n                \"_id\": \"\",\r\n                \"name\": \"\",\r\n                \"key\": \"\",\r\n                \"votes\": 0\r\n            }\r\n        ],\r\n        \"expireDate\": \"\",\r\n        \"image\": {\r\n            \"_id\": \"\",\r\n            \"url\": \"\",\r\n            \"type\": \"\"\r\n        },\r\n        \"description\": \"\",\r\n        \"likes\": 0,\r\n        \"comments\": [],\r\n        \"createdAt\": \"\",\r\n        \"updatedAt\": \"\",\r\n        \"__v\": 0\r\n    };\r\n\r\nexport default class ListPolls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            loading: false,\r\n            polls: [],\r\n            listData: [],\r\n            visible: false,\r\n            selectedPoll: poll,\r\n            radioValue: null,\r\n            show: false\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            loading: true\r\n        }, () => {\r\n            fetch('http://localhost:3001/api/polls')\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        res.json().then(data => {\r\n                            this.setState({\r\n                                loading: false,\r\n                                polls: data,\r\n                                selectedPoll: data[0]\r\n                            }, () => {this.populateData()});\r\n                        })\r\n                    }\r\n                })\r\n        });\r\n\r\n    }\r\n\r\n    populateData = () => {\r\n          let listData = [];\r\n          this.state.polls.forEach(item => {\r\n              listData.push({\r\n                  title: item.title,\r\n                  avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n                  content: item.description,\r\n                  imageUrl: item.image.url,\r\n                  createdAt: item.createdAt,\r\n                  likes: item.likes,\r\n                  comments: item.comments,\r\n                  id: item._id\r\n              });\r\n          });\r\n          this.setState({\r\n              listData: listData\r\n          });\r\n\r\n    };\r\n\r\n    handlePollClick = (id) => {\r\n      this.setState({\r\n          visible: true,\r\n          selectedPoll: this.getPollById(id)\r\n      });\r\n    };\r\n\r\n    handleOk = () => {\r\n      this.setState({\r\n          visible: false\r\n      })\r\n    };\r\n\r\n\r\n    handleCancel = () => {\r\n      this.setState({\r\n          visible: false\r\n      })\r\n    };\r\n\r\n    getPollById = (id) =>{\r\n      let poll = this.state.polls.filter(poll => {\r\n          return poll._id === id;\r\n      });\r\n      return poll[0];\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            radioValue: e.target.value\r\n        });\r\n    };\r\n\r\n    handleClose = () =>{\r\n      this.setState({\r\n          show: false\r\n      });\r\n    };\r\n\r\n    openSecondModal = () => {\r\n      this.setState({\r\n          show: true\r\n      });\r\n    };\r\n\r\n    handleOkVote = () => {\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col md-12\">\r\n                        <Skeleton loading={this.state.loading} active>\r\n                        <List\r\n                            itemLayout=\"vertical\"\r\n                            size=\"large\"\r\n                            pagination={{\r\n                                onChange: page => {\r\n                                    console.log(page);\r\n                                },\r\n                                pageSize: 3\r\n                            }}\r\n                            dataSource={this.state.listData}\r\n                            footer={\r\n                                <div>\r\n                                    <b>ant design</b> footer part\r\n                                </div>\r\n                            }\r\n                            renderItem={item => (\r\n                                <List.Item\r\n                                    key={item.title}\r\n                                    actions={[\r\n                                        <IconText type=\"like-o\" text={item.likes} />,\r\n                                        <IconText type=\"message\" text= {item.comments.length}/>\r\n                                    ]}\r\n                                    extra={\r\n                                        <button className=\"invisible-button\" onClick={() => this.handlePollClick(item.id)}>\r\n                                        <img\r\n                                            width={272}\r\n                                            alt=\"logo\"\r\n                                            src={'http://localhost:3001/api/image/' + item.imageUrl}\r\n                                        />\r\n                                        </button>\r\n                                    }\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        avatar={<Avatar src={item.avatar} />}\r\n                                        title={<button className=\"invisible-button\" onClick={() => this.handlePollClick(item.id)}>{item.title}</button>}\r\n                                        description={`Created at: ${new Date(this.state.selectedPoll.createdAt).toLocaleString('mk-MK', {timeZone: 'UTC'})}`}\r\n                                    />\r\n                                    {item.content}\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        </Skeleton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Modal show={this.state.show} onHide={this.handleClose}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Are You Sure?</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>By clicking OK you accept to vote for the selected option!</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={this.handleOkVote}>\r\n                                OK\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Modal\r\n                    size=\"lg\"\r\n                    show={this.state.visible}\r\n                    onHide={this.handleCancel}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                         <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                             {this.state.selectedPoll.title}\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <p><small>Author: {this.state.selectedPoll.author}</small></p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <p><small>Created at: {new Date(this.state.selectedPoll.createdAt).toLocaleString('mk-MK', {timeZone: 'UTC'})}</small></p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <Countdown title=\"Time Remaining\" value={this.state.selectedPoll.expireDate} format=\"D - H : m : s \" />\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <Image src={'http://localhost:3001/api/image/' + this.state.selectedPoll.image.url}\r\n                                             alt={this.state.selectedPoll._id}\r\n                                             height={300}\r\n                                             fluid\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <h6>Description:</h6>\r\n                                        <h6>{this.state.selectedPoll.description }</h6>\r\n                                    </div>\r\n                                    <Divider orientation=\"left\">Voting Options</Divider>\r\n                                    <div className=\"col-md-3 mx-auto\">\r\n                                        <Radio.Group onChange={this.onChange} value={this.state.radioValue}>\r\n                                            {\r\n                                                this.state.selectedPoll.options.map(option => {\r\n                                                    return <Radio key={option._id} onClick={this.openSecondModal}  value={option._id} disabled={!this.props.isLoggedIn}>{option.name}</Radio>\r\n                                                })\r\n                                            }\r\n                                        </Radio.Group>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}