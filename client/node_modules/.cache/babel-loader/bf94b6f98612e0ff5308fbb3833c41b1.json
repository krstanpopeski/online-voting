{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\Login.js\";\nimport React from \"react\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      let loginData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n\n      if (!this.state.errorEmail) {\n        fetch(\"http://localhost:3001/api/authenticate\", {\n          method: 'POST',\n          body: JSON.stringify(loginData),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            res.json().then(data => {\n              sessionStorage.setItem('jwtToken', data.token);\n              this.notificationDOMRef.current.addNotification({\n                title: \"Success\",\n                message: \"Successfully logged in!\",\n                type: \"success\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                  duration: 2000\n                },\n                dismissable: {\n                  click: true\n                }\n              });\n            });\n          } else if (res.status === 401) {\n            res.json().then(data => {\n              this.notificationDOMRef.current.addNotification({\n                title: \"Error\",\n                message: data.error,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-center\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: {\n                  duration: 2000\n                },\n                dismissable: {\n                  click: true\n                }\n              });\n            });\n          }\n        });\n      } else {\n        this.notificationDOMRef.current.addNotification({\n          title: \"Error\",\n          message: \"Invalid E-mail!\",\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animated\", \"flash\"],\n          animationOut: [\"animated\", \"flash\"],\n          dismiss: {\n            duration: 2000\n          },\n          dismissable: {\n            click: true\n          }\n        });\n      }\n    };\n\n    this.handleEmailChange = event => {\n      let email = event.target.value;\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (String(email).length !== 0) {\n        this.setState({\n          errorEmail: !re.test(String(email).toLowerCase()),\n          email: email\n        });\n      } else {\n        this.setState({\n          errorEmail: false\n        });\n      }\n    };\n\n    this.handlePasswordChange = event => {\n      let password = event.target.value;\n      this.setState({\n        password: password\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errorEmail: false\n    };\n    this.notificationDOMRef = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOMRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12 col-sm-6 login-form-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Login to E-Vote\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Your Email\",\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Your Password\",\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btnSubmit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\Login.js"],"names":["React","ReactNotification","Login","Component","constructor","props","onSubmit","event","preventDefault","loginData","email","state","password","errorEmail","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","sessionStorage","setItem","token","notificationDOMRef","current","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","error","handleEmailChange","target","value","re","String","length","setState","test","toLowerCase","handlePasswordChange","createRef","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\n\r\n\r\n\r\nexport default class Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email : \"\",\r\n            password : \"\",\r\n            errorEmail: false\r\n        };\r\n        this.notificationDOMRef = React.createRef();\r\n\r\n    }\r\n\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        let loginData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        if(!this.state.errorEmail) {\r\n            fetch(\"http://localhost:3001/api/authenticate\", {\r\n                method: 'POST',\r\n                body: JSON.stringify(loginData),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        res.json().then(data => {\r\n                            sessionStorage.setItem('jwtToken', data.token);\r\n                            this.notificationDOMRef.current.addNotification({\r\n                                title: \"Success\",\r\n                                message: \"Successfully logged in!\",\r\n                                type: \"success\",\r\n                                insert: \"top\",\r\n                                container: \"top-center\",\r\n                                animationIn: [\"animated\", \"fadeIn\"],\r\n                                animationOut: [\"animated\", \"fadeOut\"],\r\n                                dismiss: {duration: 2000},\r\n                                dismissable: {click: true}\r\n                            });\r\n                        });\r\n\r\n                    }\r\n                    else if (res.status === 401) {\r\n                        res.json().then(data => {\r\n                            this.notificationDOMRef.current.addNotification({\r\n                                title: \"Error\",\r\n                                message: data.error,\r\n                                type: \"danger\",\r\n                                insert: \"top\",\r\n                                container: \"top-center\",\r\n                                animationIn: [\"animated\", \"fadeIn\"],\r\n                                animationOut: [\"animated\", \"fadeOut\"],\r\n                                dismiss: {duration: 2000},\r\n                                dismissable: {click: true}\r\n                            });\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        else{\r\n            this.notificationDOMRef.current.addNotification({\r\n                title: \"Error\",\r\n                message: \"Invalid E-mail!\",\r\n                type: \"danger\",\r\n                insert: \"top\",\r\n                container: \"top-center\",\r\n                animationIn: [\"animated\", \"flash\"],\r\n                animationOut: [\"animated\", \"flash\"],\r\n                dismiss: {duration: 2000},\r\n                dismissable: {click: true}\r\n            });\r\n        }\r\n    };\r\n\r\n    handleEmailChange = (event) =>{\r\n        let email = event.target.value;\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if(String(email).length !== 0){\r\n            this.setState(\r\n                {errorEmail: !re.test(String(email).toLowerCase()),\r\n                    email:email}\r\n            );\r\n        }\r\n        else{\r\n            this.setState(\r\n                {errorEmail: false}\r\n            );\r\n        }\r\n\r\n    };\r\n\r\n    handlePasswordChange = (event) => {\r\n        let password = event.target.value;\r\n        this.setState({\r\n            password: password\r\n        });\r\n    };\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div className=\"container login-container\">\r\n                <ReactNotification ref={this.notificationDOMRef} />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-sm-6 login-form-1\">\r\n                        <h3>Login to E-Vote</h3>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Your Email\" onChange={this.handleEmailChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Your Password\" onChange={this.handlePasswordChange}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"submit\" className=\"btnSubmit\" value=\"Login\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}