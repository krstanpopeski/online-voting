{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\Navbar.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillMount = () => {\n      const token = sessionStorage.getItem('jwtToken');\n\n      if (token) {\n        fetch(\"http://localhost:3001/api/verify\", {\n          method: 'GET',\n          headers: new Headers({\n            'Authorization': token,\n            'Content-Type': 'application/x-www-form-urlencoded'\n          })\n        }).then(res => {\n          if (res.status === 200) {\n            res.json().then(data => {\n              console.log(data.user);\n              this.setState({\n                loggedIn: true,\n                user: data.user\n              });\n            });\n          } else {\n            this.setState({\n              loggedIn: false\n            });\n          }\n        });\n      }\n    };\n\n    this.signOut = () => {\n      sessionStorage.removeItem('jwtToken');\n      this.setState({\n        loggedIn: false\n      });\n      this.notificationDOMRef.current.addNotification({\n        title: \"Success!\",\n        message: \"Successfully logged out!\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-center\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000\n        },\n        dismissable: {\n          click: true\n        }\n      });\n      this.props.history.push('/');\n    };\n\n    this.state = {\n      loggedIn: false,\n      user: \"\"\n    };\n    this.notificationDOMRef = React.createRef();\n  }\n\n  render() {\n    let signed;\n\n    if (this.state.loggedIn === false) {\n      signed = React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        onClick: () => this.props.history.push(\"/login\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(Nav.Link, {\n        onClick: () => this.props.history.push(\"/register\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" Sign Up\"));\n    } else {\n      signed = React.createElement(Nav, {\n        className: \"dropdownToggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(NavDropdown, {\n        title: this.state.user.name,\n        id: \"basic-nav-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(NavDropdown.Item, {\n        href: \"#action/3.1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Action\"), React.createElement(NavDropdown.Item, {\n        href: \"#action/3.2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(NavDropdown.Item, {\n        href: \"#action/3.3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Something\"), React.createElement(NavDropdown.Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(NavDropdown.Item, {\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Sign Out\")));\n    }\n\n    return React.createElement(Navbar, {\n      bg: \"secondary\",\n      expand: \"lg\",\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOMRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Navbar.Brand, {\n      href: \"#home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"E-Vote\"), React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      onClick: () => this.props.history.push(\"/\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Home\"), React.createElement(Nav.Link, {\n      href: \"#features\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Features\"), React.createElement(Nav.Link, {\n      href: \"#pricing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Pricing\")), signed));\n  }\n\n}\n\nexport default withRouter(NavBar);","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\Navbar.js"],"names":["React","withRouter","Navbar","Nav","NavDropdown","ReactNotification","NavBar","Component","constructor","props","componentWillMount","token","sessionStorage","getItem","fetch","method","headers","Headers","then","res","status","json","data","console","log","user","setState","loggedIn","signOut","removeItem","notificationDOMRef","current","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","history","push","state","createRef","render","signed","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\n\r\n\r\nclass NavBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loggedIn:false,\r\n            user: \"\"\r\n        };\r\n        this.notificationDOMRef = React.createRef();\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        const token = sessionStorage.getItem('jwtToken');\r\n        if(token) {\r\n            fetch(\"http://localhost:3001/api/verify\", {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Authorization': token,\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                })\r\n            }).then(res => {\r\n                if(res.status === 200){\r\n                    res.json().then(data => {\r\n                        console.log(data.user);\r\n                        this.setState({\r\n                            loggedIn: true,\r\n                            user: data.user\r\n\r\n                        });\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        loggedIn: false\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    signOut = () => {\r\n        sessionStorage.removeItem('jwtToken');\r\n        this.setState(\r\n            {\r\n                loggedIn:false\r\n            }\r\n        );\r\n        this.notificationDOMRef.current.addNotification({\r\n            title: \"Success!\",\r\n            message: \"Successfully logged out!\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            container: \"top-center\",\r\n            animationIn: [\"animated\", \"fadeIn\"],\r\n            animationOut: [\"animated\", \"fadeOut\"],\r\n            dismiss: { duration: 2000 },\r\n            dismissable: { click: true }\r\n        });\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render(){\r\n\r\n        let signed;\r\n        if(this.state.loggedIn === false){\r\n            signed = (\r\n                <Nav>\r\n                    <Nav.Link onClick={() => this.props.history.push(\"/login\")}>Sign In</Nav.Link>\r\n                    <Nav.Link onClick={() => this.props.history.push(\"/register\")}> Sign Up</Nav.Link>\r\n                </Nav>);\r\n        }\r\n        else{\r\n            signed = (\r\n                <Nav className=\"dropdownToggle\">\r\n                    <NavDropdown title={this.state.user.name} id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item  href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={this.signOut}>Sign Out</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>)\r\n        }\r\n\r\n        return(\r\n            <Navbar bg=\"secondary\" expand=\"lg\" variant=\"dark\">\r\n                <ReactNotification ref={this.notificationDOMRef} />\r\n                <Navbar.Brand href=\"#home\">E-Vote</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link onClick={() => this.props.history.push(\"/\")}>Home</Nav.Link>\r\n                    <Nav.Link href=\"#features\">Features</Nav.Link>\r\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n                </Nav>\r\n                {signed}\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar)"]},"metadata":{},"sourceType":"module"}