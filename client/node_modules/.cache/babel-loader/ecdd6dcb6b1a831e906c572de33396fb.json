{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport ControlledCarousel from './ControlledCarousel';\nimport ReactNotification from \"react-notifications-component\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"react-notifications-component/dist/theme.css\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport FlipMove from \"react-flip-move\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nexport default class App extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.openModal = () => {\n      const token = sessionStorage.getItem('jwtToken');\n\n      if (token) {\n        this.setState({\n          lgShow: true\n        });\n      } else {\n        this.notificationDOMRef.current.addNotification({\n          title: \"Info\",\n          message: \"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\n          type: \"warning\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 2000\n          },\n          dismissable: {\n            click: true\n          }\n        });\n        setTimeout(() => this.props.history.push('/login'), 1500);\n      }\n    };\n\n    this.addOptions = () => {\n      let hasSame = false;\n\n      for (let i = 0; i < this.state.options.length; i++) {\n        if (this.state.options[i].key === this.textInput.value) {\n          hasSame = true;\n          break;\n        }\n      }\n\n      if (this.textInput.value.localeCompare(\"\") !== 0 && !hasSame) {\n        let options = this.state.options;\n        options.push({\n          name: this.textInput.value,\n          key: this.textInput.value\n        });\n        this.setState({\n          options: options\n        }, () => {\n          this.textInput.value = \"\";\n        });\n      }\n    };\n\n    this.deleteItem = key => {\n      let filteredItems = this.state.options.filter(item => {\n        return item.key !== key;\n      });\n      this.setState({\n        options: filteredItems\n      });\n    };\n\n    this.onRegister = () => {\n      if (this.pollDescription.value.lengt === 0 || this.pollTitle.value.length === 0 || this.state.options.length === 0) {\n        this.notificationDOM.current.addNotification({\n          title: \"Error\",\n          message: \"All fields must not be empty!\",\n          type: \"danger\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 2000\n          },\n          dismissable: {\n            click: true\n          }\n        });\n      }\n    };\n\n    this.handleChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.state = {\n      smShow: false,\n      lgShow: false,\n      options: [],\n      endDate: new Date()\n    };\n    this.notificationDOMRef = React.createRef();\n    this.notificationDOM = React.createRef();\n  }\n\n  render() {\n    let lgClose = () => this.setState({\n      lgShow: false\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOMRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(ControlledCarousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 my-3 d-flex align-items-center flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"To create your own poll, press the following button.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary hvr-bob\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Create Poll\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      size: \"lg\",\n      show: this.state.lgShow,\n      onHide: lgClose,\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Create A Poll\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Poll Title\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter Title For The Poll\",\n      ref: input => this.pollTitle = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Add Voting Options\"), React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Voting Option\",\n      \"aria-label\": \"Voting Option\",\n      \"aria-describedby\": \"basic-addon2\",\n      ref: input => this.textInput = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.addOptions,\n      variant: \"outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"ul\", {\n      className: \"listOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease-out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.options.map(t => {\n      return React.createElement(\"li\", {\n        className: \"lis hvr-bounce-out\",\n        onClick: () => this.deleteItem(t.key),\n        key: t.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, t.name);\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"datePicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"How Long Will This Poll Be Active?\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      inline: true,\n      selected: this.state.endDate,\n      onChange: this.handleChange,\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 15,\n      dateFormat: \"MMMM d, yyyy h:mm aa\",\n      timeCaption: \"Time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"fileUpload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Upload Your File\"), React.createElement(Form.Control, {\n      as: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      multiple: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })))))), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      ref: input => this.pollDescription = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.onRegister,\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\App.js"],"names":["React","ControlledCarousel","ReactNotification","Modal","Form","InputGroup","FormControl","Button","FlipMove","DatePicker","Row","Col","App","Component","constructor","props","context","openModal","token","sessionStorage","getItem","setState","lgShow","notificationDOMRef","current","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","setTimeout","history","push","addOptions","hasSame","i","state","options","length","key","textInput","value","localeCompare","name","deleteItem","filteredItems","filter","item","onRegister","pollDescription","lengt","pollTitle","notificationDOM","handleChange","date","endDate","smShow","Date","createRef","render","lgClose","input","map","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ControlledCarousel from './ControlledCarousel';\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            smShow: false,\r\n            lgShow: false,\r\n            options: [],\r\n            endDate: new Date()\r\n        };\r\n        this.notificationDOMRef = React.createRef();\r\n        this.notificationDOM = React.createRef();\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        const token = sessionStorage.getItem('jwtToken');\r\n        if(token){\r\n            this.setState({ lgShow: true });\r\n        }\r\n        else{\r\n            this.notificationDOMRef.current.addNotification({\r\n                title: \"Info\",\r\n                message: \"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\r\n                type: \"warning\",\r\n                insert: \"top\",\r\n                container: \"top-center\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: { duration: 2000 },\r\n                dismissable: { click: true }\r\n            });\r\n            setTimeout(() => this.props.history.push('/login'),1500);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    addOptions= () => {\r\n        let hasSame = false;\r\n         for(let i=0; i<this.state.options.length;i++){\r\n             if(this.state.options[i].key === this.textInput.value){\r\n                 hasSame = true;\r\n                 break;\r\n             }\r\n         }\r\n        if(this.textInput.value.localeCompare(\"\") !== 0 && !hasSame) {\r\n            let options = this.state.options;\r\n            options.push(\r\n                {\r\n                    name: this.textInput.value,\r\n                    key: this.textInput.value\r\n                }\r\n            );\r\n            this.setState({\r\n                options: options\r\n            }, () => {this.textInput.value=\"\";});\r\n        }\r\n    };\r\n\r\n    deleteItem = (key) => {\r\n      let filteredItems =  this.state.options.filter(item => {\r\n          return (item.key !== key);\r\n      });\r\n      this.setState({\r\n          options: filteredItems\r\n      });\r\n    };\r\n\r\n    onRegister = () =>{\r\n      if(this.pollDescription.value.lengt === 0 || this.pollTitle.value.length === 0 || this.state.options.length ===0){\r\n          this.notificationDOM.current.addNotification({\r\n              title: \"Error\",\r\n              message: \"All fields must not be empty!\",\r\n              type: \"danger\",\r\n              insert: \"top\",\r\n              container: \"top-center\",\r\n              animationIn: [\"animated\", \"fadeIn\"],\r\n              animationOut: [\"animated\", \"fadeOut\"],\r\n              dismiss: { duration: 2000 },\r\n              dismissable: { click: true }\r\n          });\r\n      }\r\n\r\n    };\r\n\r\n    handleChange = (date) => {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        let lgClose = () => this.setState({ lgShow: false });\r\n        return (\r\n            <div>\r\n                <ReactNotification ref={this.notificationDOMRef} />\r\n                <div className=\"container-fluid p-0\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <ControlledCarousel/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-md-6 my-3 d-flex align-items-center flex-column\">\r\n                            <h5>To create your own poll, press the following button.</h5>\r\n                            <button type=\"button\" className=\"btn btn-secondary hvr-bob\" onClick={this.openModal}>Create Poll</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.lgShow}\r\n                        onHide={lgClose}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                    >\r\n                        <ReactNotification ref={this.notificationDOM} />\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                Create A Poll\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                    <Form.Label>Poll Title</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter Title For The Poll\" ref={input => this.pollTitle = input}/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Add Voting Options</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <FormControl\r\n                                            placeholder=\"Voting Option\"\r\n                                            aria-label=\"Voting Option\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                            ref={input => this.textInput = input}\r\n                                        />\r\n                                        <InputGroup.Append>\r\n                                            <Button onClick = {this.addOptions} variant=\"outline-secondary\">Add</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n\r\n                                    <ul className=\"listOptions\">\r\n                                        <FlipMove duration={250} easing=\"ease-out\">\r\n                                            {\r\n                                                this.state.options.map(t => {return <li className=\"lis hvr-bounce-out\" onClick={() => this.deleteItem(t.key)} key={t.key}>{t.name}</li>})\r\n                                            }\r\n                                        </FlipMove>\r\n                                    </ul>\r\n\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Col>\r\n                                <Form.Group controlId=\"datePicker\">\r\n                                    <Form.Label>How Long Will This Poll Be Active?</Form.Label>\r\n                                    <InputGroup>\r\n                                    <DatePicker\r\n                                        inline\r\n                                        selected={this.state.endDate}\r\n                                        onChange={this.handleChange}\r\n                                        showTimeSelect\r\n                                        timeFormat=\"HH:mm\"\r\n                                        timeIntervals={15}\r\n                                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                        timeCaption=\"Time\"\r\n                                    />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                    <Form.Group controlId=\"fileUpload\">\r\n                                        <Form.Label >Upload Your File</Form.Label>\r\n                                            <Form.Control as=\"file\">\r\n                                                <div className=\"form-group files\">\r\n                                                    <input type=\"file\" className=\"form-control\" multiple=\"\"/>\r\n                                                </div>\r\n\r\n                                            </Form.Control>\r\n                                    </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows=\"3\" ref={input => this.pollDescription = input}/>\r\n                                </Form.Group>\r\n                                <Button onClick={this.onRegister} variant=\"primary\" >\r\n                                    Submit\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n                )\r\n        }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}