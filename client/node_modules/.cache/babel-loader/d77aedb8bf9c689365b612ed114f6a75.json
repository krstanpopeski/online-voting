{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\ListPolls.js\";\nimport React from 'react';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { List, Avatar, Icon, Skeleton } from \"antd\";\nconst listData = [];\n\nfor (let i = 0; i < 23; i++) {\n  listData.push({\n    href: \"http://ant.design\",\n    title: \"ant design part \".concat(i),\n    avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n    description: \"Ant Design, a design language for background applications, is refined by Ant UED Team.\",\n    content: \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"\n  });\n}\n\nconst IconText = ({\n  type,\n  text\n}) => React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Icon, {\n  type: type,\n  style: {\n    marginRight: 8\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), text);\n\nexport default class ListPolls extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.populateData = () => {\n      let listData = [];\n      this.state.data.forEach(item => {\n        listData.push({\n          href: \"http://ant.design\",\n          title: item.title,\n          avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          content: item.description\n        });\n      });\n      this.setState({\n        listData: listData\n      });\n    };\n\n    this.state = {\n      loading: false,\n      polls: [],\n      listData: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      loading: true\n    }, () => {\n      fetch('http://localhost:3001/api/polls').then(res => {\n        if (res.status === 200) {\n          res.json().then(data => {\n            this.setState({\n              loading: false,\n              polls: data\n            }, () => {\n              this.populateData();\n            });\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Skeleton, {\n      loading: this.state.loading,\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(List, {\n      itemLayout: \"vertical\",\n      size: \"large\",\n      pagination: {\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 3\n      },\n      dataSource: this.state.listData,\n      footer: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"ant design\"), \" footer part\"),\n      renderItem: item => React.createElement(List.Item, {\n        key: item.title,\n        actions: [React.createElement(IconText, {\n          type: \"star-o\",\n          text: \"156\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(IconText, {\n          type: \"like-o\",\n          text: \"156\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), React.createElement(IconText, {\n          type: \"message\",\n          text: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        })],\n        extra: React.createElement(\"img\", {\n          width: 272,\n          alt: \"logo\",\n          src: item.image.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: item.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }),\n        title: React.createElement(\"a\", {\n          href: item.href,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, item.title),\n        description: item.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), item.content),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\ListPolls.js"],"names":["React","List","Avatar","Icon","Skeleton","listData","i","push","href","title","avatar","description","content","IconText","type","text","marginRight","ListPolls","Component","constructor","props","populateData","state","data","forEach","item","setState","loading","polls","componentWillMount","fetch","then","res","status","json","render","onChange","page","console","log","pageSize","image","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAO,aAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,QAA7B,QAA6C,MAA7C;AAGA,MAAMC,QAAQ,GAAG,EAAjB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,EAAAA,QAAQ,CAACE,IAAT,CAAc;AACVC,IAAAA,IAAI,EAAE,mBADI;AAEVC,IAAAA,KAAK,4BAAqBH,CAArB,CAFK;AAGVI,IAAAA,MAAM,EAAE,kEAHE;AAIVC,IAAAA,WAAW,EACP,wFALM;AAMVC,IAAAA,OAAO,EACH;AAPM,GAAd;AASH;;AAED,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAED,IAAZ;AAAkB,EAAA,KAAK,EAAE;AAAEE,IAAAA,WAAW,EAAE;AAAf,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEKD,IAFL,CADJ;;AAOA,eAAe,MAAME,SAAN,SAAwBjB,KAAK,CAACkB,SAA9B,CAAuC;AAElDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA4BlBC,YA5BkB,GA4BH,MAAM;AACf,UAAIhB,QAAQ,GAAG,EAAf;AACA,WAAKiB,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,IAAI,IAAI;AAC5BpB,QAAAA,QAAQ,CAACE,IAAT,CAAc;AACVC,UAAAA,IAAI,EAAE,mBADI;AAEVC,UAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAFF;AAGVC,UAAAA,MAAM,EAAE,kEAHE;AAIVE,UAAAA,OAAO,EAAEa,IAAI,CAACd;AAJJ,SAAd;AAMH,OAPD;AAQA,WAAKe,QAAL,CAAc;AACVrB,QAAAA,QAAQ,EAAEA;AADA,OAAd;AAIL,KA1CiB;;AAEd,SAAKiB,KAAL,GAAW;AACPK,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,KAAK,EAAE,EAFA;AAGPvB,MAAAA,QAAQ,EAAE;AAHH,KAAX;AAKH;;AAEDwB,EAAAA,kBAAkB,GAAE;AAChB,SAAKH,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAE;AADC,KAAd,EAEG,MAAM;AACLG,MAAAA,KAAK,CAAC,iCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBD,UAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBR,IAAI,IAAI;AACpB,iBAAKG,QAAL,CAAc;AACVC,cAAAA,OAAO,EAAE,KADC;AAEVC,cAAAA,KAAK,EAAEL;AAFG,aAAd,EAGG,MAAM;AAAC,mBAAKF,YAAL;AAAoB,aAH9B;AAIH,WALD;AAMH;AACJ,OAVL;AAWH,KAdD;AAgBH;;AAoBDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWK,OAA9B;AAAuC,MAAA,MAAM,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AACI,MAAA,UAAU,EAAC,UADf;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,UAAU,EAAE;AACRS,QAAAA,QAAQ,EAAEC,IAAI,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,SAHO;AAIRG,QAAAA,QAAQ,EAAE;AAJF,OAHhB;AASI,MAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWjB,QAT3B;AAUI,MAAA,MAAM,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,iBAXR;AAeI,MAAA,UAAU,EAAEoB,IAAI,IACZ,oBAAC,IAAD,CAAM,IAAN;AACI,QAAA,GAAG,EAAEA,IAAI,CAAChB,KADd;AAEI,QAAA,OAAO,EAAE,CACL,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,QAAf;AAAwB,UAAA,IAAI,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,EAEL,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,QAAf;AAAwB,UAAA,IAAI,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFK,EAGL,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,SAAf;AAAyB,UAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHK,CAFb;AAOI,QAAA,KAAK,EACD;AACI,UAAA,KAAK,EAAE,GADX;AAEI,UAAA,GAAG,EAAC,MAFR;AAGI,UAAA,GAAG,EAAEgB,IAAI,CAACgB,KAAL,CAAWC,GAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAeI,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACI,QAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEjB,IAAI,CAACf,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEI,QAAA,KAAK,EAAE;AAAG,UAAA,IAAI,EAAEe,IAAI,CAACjB,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqBiB,IAAI,CAAChB,KAA1B,CAFX;AAGI,QAAA,WAAW,EAAEgB,IAAI,CAACd,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAoBKc,IAAI,CAACb,OApBV,CAhBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADJ,CADJ,CADJ;AAkDH;;AAnGiD","sourcesContent":["import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { List, Avatar, Icon, Skeleton } from \"antd\";\r\n\r\n\r\nconst listData = [];\r\nfor (let i = 0; i < 23; i++) {\r\n    listData.push({\r\n        href: \"http://ant.design\",\r\n        title: `ant design part ${i}`,\r\n        avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n        description:\r\n            \"Ant Design, a design language for background applications, is refined by Ant UED Team.\",\r\n        content:\r\n            \"We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.\"\r\n    });\r\n}\r\n\r\nconst IconText = ({ type, text }) => (\r\n    <span>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n        {text}\r\n  </span>\r\n);\r\n\r\nexport default class ListPolls extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            loading: false,\r\n            polls: [],\r\n            listData: []\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            loading: true\r\n        }, () => {\r\n            fetch('http://localhost:3001/api/polls')\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        res.json().then(data => {\r\n                            this.setState({\r\n                                loading: false,\r\n                                polls: data\r\n                            }, () => {this.populateData()});\r\n                        })\r\n                    }\r\n                })\r\n        });\r\n\r\n    }\r\n\r\n    populateData = () => {\r\n          let listData = [];\r\n          this.state.data.forEach(item => {\r\n              listData.push({\r\n                  href: \"http://ant.design\",\r\n                  title: item.title,\r\n                  avatar: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n                  content: item.description\r\n              });\r\n          });\r\n          this.setState({\r\n              listData: listData\r\n          });\r\n\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col md-12\">\r\n                        <Skeleton loading={this.state.loading} active>\r\n                        <List\r\n                            itemLayout=\"vertical\"\r\n                            size=\"large\"\r\n                            pagination={{\r\n                                onChange: page => {\r\n                                    console.log(page);\r\n                                },\r\n                                pageSize: 3\r\n                            }}\r\n                            dataSource={this.state.listData}\r\n                            footer={\r\n                                <div>\r\n                                    <b>ant design</b> footer part\r\n                                </div>\r\n                            }\r\n                            renderItem={item => (\r\n                                <List.Item\r\n                                    key={item.title}\r\n                                    actions={[\r\n                                        <IconText type=\"star-o\" text=\"156\" />,\r\n                                        <IconText type=\"like-o\" text=\"156\" />,\r\n                                        <IconText type=\"message\" text=\"2\" />\r\n                                    ]}\r\n                                    extra={\r\n                                        <img\r\n                                            width={272}\r\n                                            alt=\"logo\"\r\n                                            src={item.image.url}\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <List.Item.Meta\r\n                                        avatar={<Avatar src={item.avatar} />}\r\n                                        title={<a href={item.href}>{item.title}</a>}\r\n                                        description={item.description}\r\n                                    />\r\n                                    {item.content}\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        </Skeleton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}