{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport ControlledCarousel from './ControlledCarousel';\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nexport default class App extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.openModal = () => {\n      const token = sessionStorage.getItem('jwtToken');\n\n      if (token) {\n        this.setState({\n          lgShow: true\n        });\n      } else {\n        this.notificationDOMRef.current.addNotification({\n          title: \"Info\",\n          message: \"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\n          type: \"warning\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 2000\n          },\n          dismissable: {\n            click: true\n          }\n        });\n        setTimeout(() => this.props.history.push('/login'), 1500);\n      }\n    };\n\n    this.state = {\n      smShow: false,\n      lgShow: false\n    };\n    this.notificationDOMRef = React.createRef();\n  }\n\n  render() {\n    let lgClose = () => this.setState({\n      lgShow: false\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOMRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ControlledCarousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 my-3 d-flex align-items-center flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"To create your own poll, press the following button.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Create Poll\")))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\App.js"],"names":["React","ControlledCarousel","Modal","Form","Button","InputGroup","FormControl","ReactNotification","App","Component","constructor","props","context","openModal","token","sessionStorage","getItem","setState","lgShow","notificationDOMRef","current","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","setTimeout","history","push","state","smShow","createRef","render","lgClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ControlledCarousel from './ControlledCarousel';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            smShow: false,\r\n            lgShow: false,\r\n        };\r\n        this.notificationDOMRef = React.createRef();\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        const token = sessionStorage.getItem('jwtToken');\r\n        if(token){\r\n            this.setState({ lgShow: true });\r\n        }\r\n        else{\r\n            this.notificationDOMRef.current.addNotification({\r\n                title: \"Info\",\r\n                message: \"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\r\n                type: \"warning\",\r\n                insert: \"top\",\r\n                container: \"top-center\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: { duration: 2000 },\r\n                dismissable: { click: true }\r\n            });\r\n            setTimeout(() => this.props.history.push('/login'),1500);\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        let lgClose = () => this.setState({ lgShow: false });\r\n        return (\r\n            <div>\r\n                <ReactNotification ref={this.notificationDOMRef} />\r\n                <div className=\"container-fluid p-0\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <ControlledCarousel/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-md-6 my-3 d-flex align-items-center flex-column\">\r\n                            <h5>To create your own poll, press the following button.</h5>\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={this.openModal}>Create Poll</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                )\r\n        }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}