{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\popes\\\\React\\\\online-voting\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport ControlledCarousel from './ControlledCarousel';\nimport ReactNotification from \"react-notifications-component\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"react-notifications-component/dist/theme.css\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport FlipMove from \"react-flip-move\";\nexport default class App extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.openModal = () => {\n      const token = sessionStorage.getItem('jwtToken');\n\n      if (token) {\n        this.setState({\n          lgShow: true\n        });\n      } else {\n        this.notificationDOMRef.current.addNotification({\n          title: \"Info\",\n          message: \"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\n          type: \"warning\",\n          insert: \"top\",\n          container: \"top-center\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 2000\n          },\n          dismissable: {\n            click: true\n          }\n        });\n        setTimeout(() => this.props.history.push('/login'), 1500);\n      }\n    };\n\n    this.addOptions = () => {\n      let hasSame = false;\n\n      for (let i = 0; i < this.state.options.length; i++) {\n        if (this.state.options[i].key === this.textInput.value) {\n          hasSame = true;\n          break;\n        }\n      }\n\n      if (this.textInput.value.localeCompare(\"\") !== 0 && !hasSame) {\n        let options = this.state.options;\n        options.push({\n          name: this.textInput.value,\n          key: this.textInput.value\n        });\n        this.setState({\n          options: options\n        }, () => {\n          this.textInput.value = \"\";\n        });\n      }\n    };\n\n    this.deleteItem = key => {\n      let filteredItems = this.state.options.filter(item => {\n        return item.key !== key;\n      });\n      this.setState({\n        options: filteredItems\n      });\n    };\n\n    this.state = {\n      smShow: false,\n      lgShow: false,\n      options: []\n    };\n    this.notificationDOMRef = React.createRef();\n  }\n\n  render() {\n    let lgClose = () => this.setState({\n      lgShow: false\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ReactNotification, {\n      ref: this.notificationDOMRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container-fluid p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(ControlledCarousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 my-3 d-flex align-items-center flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"To create your own poll, press the following button.\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary hvr-bob\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Create Poll\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      size: \"lg\",\n      show: this.state.lgShow,\n      onHide: lgClose,\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"example-modal-sizes-title-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Create A Poll\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Poll Title\"), React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter title of the poll.\",\n      ref: input => this.pollTitle = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Add Voting Options\"), React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Voting Option\",\n      \"aria-label\": \"Voting Option\",\n      \"aria-describedby\": \"basic-addon2\",\n      ref: input => this.textInput = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.addOptions,\n      variant: \"outline-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"ul\", {\n      className: \"listOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease-out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.options.map(t => {\n      return React.createElement(\"li\", {\n        className: \"lis hvr-bounce-out\",\n        onClick: () => this.deleteItem(t.key),\n        key: t.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, t.name);\n    })))), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      ref: input => this.pollDescription = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\popes\\React\\online-voting\\client\\src\\App.js"],"names":["React","ControlledCarousel","ReactNotification","Modal","Form","InputGroup","FormControl","Button","FlipMove","App","Component","constructor","props","context","openModal","token","sessionStorage","getItem","setState","lgShow","notificationDOMRef","current","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","setTimeout","history","push","addOptions","hasSame","i","state","options","length","key","textInput","value","localeCompare","name","deleteItem","filteredItems","filter","item","smShow","createRef","render","lgClose","input","pollTitle","map","t","pollDescription"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ControlledCarousel from './ControlledCarousel';\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            smShow: false,\r\n            lgShow: false,\r\n            options: [],\r\n        };\r\n        this.notificationDOMRef = React.createRef();\r\n    }\r\n\r\n\r\n    openModal = () => {\r\n        const token = sessionStorage.getItem('jwtToken');\r\n        if(token){\r\n            this.setState({ lgShow: true });\r\n        }\r\n        else{\r\n            this.notificationDOMRef.current.addNotification({\r\n                title: \"Info\",\r\n                message: \"You have to be logged in to create a poll! Redirecting to Login page shortly! \",\r\n                type: \"warning\",\r\n                insert: \"top\",\r\n                container: \"top-center\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: { duration: 2000 },\r\n                dismissable: { click: true }\r\n            });\r\n            setTimeout(() => this.props.history.push('/login'),1500);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    addOptions= () => {\r\n        let hasSame = false;\r\n         for(let i=0; i<this.state.options.length;i++){\r\n             if(this.state.options[i].key === this.textInput.value){\r\n                 hasSame = true;\r\n                 break;\r\n             }\r\n         }\r\n        if(this.textInput.value.localeCompare(\"\") !== 0 && !hasSame) {\r\n            let options = this.state.options;\r\n            options.push(\r\n                {\r\n                    name: this.textInput.value,\r\n                    key: this.textInput.value\r\n                }\r\n            );\r\n            this.setState({\r\n                options: options\r\n            }, () => {this.textInput.value=\"\";});\r\n        }\r\n    };\r\n\r\n    deleteItem = (key) => {\r\n      let filteredItems =  this.state.options.filter(item => {\r\n          return (item.key !== key);\r\n      });\r\n      this.setState({\r\n          options: filteredItems\r\n      });\r\n    };\r\n\r\n\r\n    render() {\r\n        let lgClose = () => this.setState({ lgShow: false });\r\n        return (\r\n            <div>\r\n                <ReactNotification ref={this.notificationDOMRef} />\r\n                <div className=\"container-fluid p-0\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <ControlledCarousel/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-md-6 my-3 d-flex align-items-center flex-column\">\r\n                            <h5>To create your own poll, press the following button.</h5>\r\n                            <button type=\"button\" className=\"btn btn-secondary hvr-bob\" onClick={this.openModal}>Create Poll</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        size=\"lg\"\r\n                        show={this.state.lgShow}\r\n                        onHide={lgClose}\r\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                                Create A Poll\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                                    <Form.Label>Poll Title</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter title of the poll.\" ref={input => this.pollTitle = input}/>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Add Voting Options</Form.Label>\r\n                                    <InputGroup className=\"mb-3\">\r\n                                        <FormControl\r\n                                            placeholder=\"Voting Option\"\r\n                                            aria-label=\"Voting Option\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                            ref={input => this.textInput = input}\r\n                                        />\r\n                                        <InputGroup.Append>\r\n                                            <Button onClick = {this.addOptions} variant=\"outline-secondary\">Add</Button>\r\n                                        </InputGroup.Append>\r\n                                    </InputGroup>\r\n\r\n                                    <ul className=\"listOptions\">\r\n                                        <FlipMove duration={250} easing=\"ease-out\">\r\n                                            {\r\n                                                this.state.options.map(t => {return <li className=\"lis hvr-bounce-out\" onClick={() => this.deleteItem(t.key)} key={t.key}>{t.name}</li>})\r\n                                            }\r\n                                        </FlipMove>\r\n                                    </ul>\r\n\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows=\"3\" ref={input => this.pollDescription = input}/>\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n                )\r\n        }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}